/*******************************************************************************
*  2017 Greg Z. - I have no idea what I'm doing                                *
*  REMEMBER TO CREDIT PROPERLY                                                 *
*   REMEMBER TO CREDIT PROPERLY                                                *
*    REMEMBER TO CREDIT PROPERLY                                               *
*     REMEMBER TO CREDIT PROPERLY                                              *
*      REMEMBER TO CREDIT PROPERLY                                             *
*       REMEMBER TO CREDIT PROPERLY                                            *
*        REMEMBER TO CREDIT PROPERLY                                           *
*         REMEMBER TO CREDIT PROPERLY                                          *
*          REMEMBER TO CREDIT PROPERLY                                         *
*           REMEMBER TO CREDIT PROPERLY                                        *
*******************************************************************************/
desc: Oversampler Library

// Original code lifted from Tale and Sault

// Filter Coefficients Calculator ------------------------------------------------------------------------
//https://fiiir.com/
//
//
//http://t-filter.engineerjs.com/
//https://www.google.fr/search?hl=en&q=FIR&gws_rd=cr,ssl&ei=nEmqWIeOLaGOgAad5YOwAw#safe=off&hl=en&q=fir+coefficients+calculator
//http://www.arc.id.au/FilterDesign.html
//http://yehar.com/blog/wp-content/uploads/2009/08/deip.pdf
//https://www.dsprelated.com/showcode/270.php

//TO_CHECK
//fir_lp.jsfx-inc
//FIR_coeffCalculator.jsfx-inc




@init

/*******************************************************************
  osHermite_up2 
  ----
  
  2x
  
  Cubic Hermite Interpolator (6 pt, 3 o)
  
  lifted from Sault
 
*******************************************************************/

function osHermite_up2(x)
  instance(x5,x4,x3,x2,x1,x0,y0,y1,c0,c1,c2,c3)
  (
  x5 = x4; x4 = x3; x3 = x2; x2 = x1; x1 = x0; x0 = x;
  
  c0 = x2;
  c1 = 0.083333 * (x0-x4) + 0.666667 * (x3-x1);
  c2 = 1.25 * x1 - 2.333333 * x2 + 1.666667 * x3 - 0.5 * x4;
  c2 +=     0.083333 * x5 - 0.166667 * x0;
  c3 = 0.083333 * (x0-x5) + 0.583333 * (x4-x1) + 1.333333 * (x2-x3);
  
  y1 = ((c3*0.5+c2)*0.5+c1)*0.5+c0;
  y0 = x2;
  );

/*******************************************************************
  osHermite_up4 
  ----
  
  4x
  
  Cubic Hermite Interpolator (6 pt, 3 o)
  
  lifted from Sault
 
*******************************************************************/

function osHermite_up4(x)
  instance(x5,x4,x3,x2,x1,x0,y0,y1,y2,y3,c0,c1,c2,c3)
  (
  x5 = x4; x4 = x3; x3 = x2; x2 = x1; x1 = x0; x0 = x;
  
  c0 = x2;
  c1 = 0.083333 * (x0-x4) + 0.666667 * (x3-x1);
  c2 = 1.25 * x1 - 2.333333 * x2 + 1.666667 * x3 - 0.5 * x4;
  c2 +=     0.083333 * x5 - 0.166667 * x0;
  c3 = 0.083333 * (x0-x5) + 0.583333 * (x4-x1) + 1.333333 * (x2-x3);
  
  y3 = ((c3*0.75 + c2)*0.75 + c1)*0.75 + c0;
  y2 = ((c3*0.5  + c2)*0.5  + c1)*0.5  + c0;
  y1 = ((c3*0.25 + c2)*0.25 + c1)*0.25 + c0;
  y0 = x2;
  );

/*******************************************************************
  osTrilinear_up2 
  ----
  
  2x
  
  Trilinear Interpolator (4 pt, 2 o)
  
  lifted from Sault
 
*******************************************************************/

function osTrilinear_up2(x)
  instance(x0,x1,x2,x3,y0,y1,c0,c1,c2,n)
  (
  x3 = x2; x2 = x1; x1 = x0; x0 = x;
  
  n = x0 + x3;
  c0 = x1;
  c1 = 1.5*x2 - 0.5*(x1+n);
  c2 = 0.5*(n-x1-x2);
  
  y1 = (c2*0.5+c1)*0.5+c0;
  y0 = x1;

  );

/*******************************************************************
  osTrilinear_up4 
  ----
  
  4x
  
  Trilinear Interpolator (4 pt, 2 o)
  
  lifted from Sault
 
*******************************************************************/

function osTrilinear_up4(x)
  instance(x0,x1,x2,x3,y0,y1,y2,y3,c0,c1,c2,n)
  (
  x3 = x2; x2 = x1; x1 = x0; x0 = x;
  
  n = x0 + x3;
  c0 = x1;
  c1 = 1.5*x2 - 0.5*(x1+n);
  c2 = 0.5*(n-x1-x2);
  
  y3 = (c2*0.75 + c1)*0.75 + c0;
  y2 = (c2*0.5  + c1)*0.5  + c0;
  y1 = (c2*0.25 + c1)*0.25 + c0;
  y0 = x1;
  
  );


/*******************************************************************
  osHalfband_os2
  ----
  
  2x
  
  Halfband filter (19-tap)
  
  lifted from Tale and Sault
  
  Skips upsampling, so you can generate a signal at 2x oversampling rather than upsample a signal
 
*******************************************************************/


function osHalfband_os2()
  instance(y18, y17, y16, y15, y14, y13, y12, y11, y10, y9, y8, y7, y6, y5, y4, y3, y2, y1, y0)
  (
  y18 = y16; y17 = y15; y16 = y14; y15 = y13;
  y14 = y12; y13 = y11; y12 = y10; y11 =  y9;
  y10 =  y8;  y9 =  y7;  y8 =  y6;  y7 =  y5;
   y6 =  y4;  y5 =  y3;  y4 =  y2;  y3 =  y1;
   y2 =  y0;
  );


/*******************************************************************
  osHalfband_up2
  ----
  
  2x
  
  Halfband filter (19-tap)
  
  lifted from Tale and Sault
  
  Upsamples
  
  //TALE 04-02-2016, 03:24 AM 
  //os_up2(): You scale by 4, but shouldn't that be 2 (or rather: 1/(sum_of_coeffs - center_coeff) = 1.9992003198720512)?
  //http://dsp.stackexchange.com/questions/8167/fft-zero-padding-amplitude-change
  //https://www.kvraudio.com/forum/viewtopic.php?f=33&t=478587
  
  // coefficients from Matlab
  // 0.0028         0        -0.0118         0    0.0334         0   -0.0849
  //      0         0.3106    0.5000    0.3106         0   -0.0849         0
  // 0.0334         0   -0.0118         0    0.0028
  
*******************************************************************/

function osHalfband_up2(x)
  instance(x9, x8, x7, x6, x5, x4, x3, x2, x1, x0, y18, y17, y16, y15, y14, y13, y12, y11, y10, y9, y8, y7, y6, y5, y4, y3, y2, y1, y0)
  (
  x9 = x8; x8 = x7; x7 = x6; x6 = x5; x5 = x4; x4 = x3;
  x3 = x2; x2 = x1; x1 = x0; x0 = x * 2;
      
  
  this.osHalfband_os2();
  y1 = 0.0028*(x0+x9) - 0.0118*(x1+x8) + 0.0334*(x2+x7) 
  - 0.0849*(x3+x6) + 0.3106*(x4+x5);
  y0 = 0.5*x4;
  
  );  

/*******************************************************************
  osHalfband_down2
  ----
  
  2x
  
  Halfband filter (19-tap)
  
  lifted from Tale and Sault
  
  Downsamples
    
*******************************************************************/

function osHalfband_down2()
  instance(y18, y16, y14, y12, y10, y9, y8, y6, y4, y2, y0)
  (
  0.0028*(y0+y18) - 0.0118*(y2+y16) + 0.0334*(y4+y14) 
  - 0.0849*(y6+y12) + 0.3106*(y8+y10) + 0.5*y9;
  );

/*******************************************************************
  osHalfband_reset2
  ----
  
  2x
  
  Halfband filter (19-tap)
  
  lifted from Tale and Sault
  
  Resets the oversampler filter state
    
*******************************************************************/

function osHalfband_reset2()
  instance(x9, x8, x7, x6, x5, x4, x3, x2, x1, x0, y18, y17, y16, y15, y14, y13, y12, y11, y10, y9, y8, y7, y6, y5, y4, y3, y2, y1, y0)
  (
  x9 = x8 = x7 = x6 = x5 = x4 = x3 = x2 = x1 = x0 =
  y18 = y17 = y16 = y15 = y14 = y13 = y12 = y11 = y10 =
  y9 = y8 = y7 = y6 = y5 = y4 = y3 = y2 = y1 = y0 = 0;
  );


/*******************************************************************
  osQuarterband_os4
  ----
  
  4x
  
  Quarterband filter (31 tap)
  
  lifted from Sault
  
  Skips upsampling, so you can generate a signal at 2x oversampling rather than upsample a signal
    
*******************************************************************/

function osQuarterband_os4()
  instance(y30, y29, y28, y27, y26, y25, y24, y23, y22, y21, y20, y19, y18, y17, y16, y15, y14, y13, y12, y11, y10, y9, y8, y7, y6, y5, y4, y3, y2, y1, y0)
  (
  y30 = y26; y29 = y25; y28 = y24; y27 = y23;
  y26 = y22; y25 = y21; y24 = y20; y23 = y19;
  y22 = y18; y21 = y17; y20 = y16; y19 = y15;
  y18 = y14; y17 = y13; y16 = y12; y15 = y11;
  y14 = y10; y13 =  y9; y12 =  y8; y11 =  y7;
  y10 =  y6;  y9 =  y5;  y8 =  y4;  y7 =  y3;
   y6 =  y2;  y5 =  y1;  y4 =  y0;
  );

/*******************************************************************
  osQuarterband_up4
  ----
  
  4x
  
  Quarterband filter (31 tap)
  
  lifted from Sault
  
  Upsamples
  
  //TALE 04-02-2016, 03:24 AM 
  //os_up2(): You scale by 4, but shouldn't that be 2 (or rather: 1/(sum_of_coeffs - center_coeff) = 1.9992003198720512)?
  //http://dsp.stackexchange.com/questions/8167/fft-zero-padding-amplitude-change
  //https://www.kvraudio.com/forum/viewtopic.php?f=33&t=478587
      
*******************************************************************/

function osQuarterband_up4(x)
  instance(x0, x1, x2, x3, x4, x5, x6, x7, y0, y1, y2, y3)
  (
  x7 = x6; x6 = x5; x5 = x4; x4 = x3; x3 = x2; x2 = x1; x1 = x0;
  x0 = x * 4;
  //SAULT  
  //x0 = x * 4.0189;
 
 
  this.osQuarterband_os4();

  y0 = -0.0025*x0 + 0.0079*x1 - 0.0224*x2 + 0.0703*x3 + 0.2235*x4
  - 0.0375*x5 + 0.0135*x6 - 0.0043*x7;
  y1 = -0.0045*(x0 + x7) + 0.0147*(x1 + x6) - 0.0407*(x2 + x5)
  + 0.1546*(x3 + x4);
  y2 = -0.0043*x0 + 0.0135*x1 - 0.0375*x2 + 0.2235*x3 + 0.0703*x4
  - 0.0224*x5 + 0.0079*x6 - 0.0025*x7;
  y3 = x3*0.25;
  );

/*******************************************************************
  osQuarterband_down4
  ----
  
  4x
  
  Quarterband filter (31 tap)
  
  lifted from Sault
  
  Downsamples
  
      
*******************************************************************/

function osQuarterband_down4()
  instance(y30, y29, y28, y26, y25, y24, y22, y21, y20, y18, y17, y16, y15, y14, y13, y12, y10, y9,y8, y6, y5, y4, y2, y1,y0)
  (
  -0.0025*( y0+y30) - 0.0045*( y1+y29) - 0.0043*( y2+y28) +
   0.0079*( y4+y26) + 0.0147*( y5+y25) + 0.0135*( y6+y24) +
  -0.0224*( y8+y22) - 0.0407*( y9+y21) - 0.0375*(y10+y20) +
   0.0703*(y12+y18) + 0.1546*(y13+y17) + 0.2235*(y14+y16) +
   0.25*y15;
  );

/*******************************************************************
  osQuarterband_reset4
  ----
  
  4x
  
  Quarterband filter (31 tap)
  
  lifted from Tale and Sault
  
  Resets the oversampler filter state
    
*******************************************************************/
function osQuarterband_reset4()
 instance(     y30 y29 y28 y27 y26 y25 y24 y23 y22 y21 
    y20 y19     y18 y17 y16 y15 y14 y13 y12 y11
    y10  y9  y8  y7  y6  y5  y4  y3  y2  y1  
     y0  x0  x1  x2  x3  x4  x5  x6  x7  x8 x9 )
(
 y30 = y29 = y28 = y27 = y26 = y25 = y24 = y23 = y22 = y21 =
 y20 = y19 = y17 = y16 = y15 = y14 = y13 = y12 = y11 = y10 =
  y9 = y8 = y7 = y6 = y5 = y4 = y3 = y2 = y1 = y0 =
  x0 = x1 = x2 = x3 = x4 = x5 = x6 = x7 = x8 = x9 = 0;
);


/*******************************************************************
      
  --------
  
*******************************************************************/

