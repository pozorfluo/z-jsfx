/*******************************************************************************
*  2015 Greg Z. - I have no idea what I'm doing                                *
*  REMEMBER TO CREDIT PROPERLY                                                 *
*   REMEMBER TO CREDIT PROPERLY                                                *
*    REMEMBER TO CREDIT PROPERLY                                               *
*     REMEMBER TO CREDIT PROPERLY                                              *
*      REMEMBER TO CREDIT PROPERLY                                             *
*       REMEMBER TO CREDIT PROPERLY                                            *
*        REMEMBER TO CREDIT PROPERLY                                           *
*         REMEMBER TO CREDIT PROPERLY                                          *
*          REMEMBER TO CREDIT PROPERLY                                         *
*           REMEMBER TO CREDIT PROPERLY                                        *
*******************************************************************************/

desc: Parametric POW Gain

slider1:0<0,64,1>Input Gain (db)
slider2:1<0.01,2,0.01>POW

slider9:0<0,1,0.001>DC Bias (V)
slider10:0.01<0.001,1,0.001>Drive
slider11:10<0,100,1>Overshoot length (spl)

slider19:200<5,20000,1>Jitter Smoothness Cutoff (Hz)

slider20:0<-24,24,1>Output Gain (db)

slider64:1<0,6,1>Stages


slider60:1<0,5,0.01>I
slider61:1<0,100,0.01>0

import z/z-MemoryManager.jsfx-inc
import z/z-TransferCurves.jsfx-inc
import z/z-Utilities.jsfx-inc 

@init

rc = 1 / (2 * $pi * slider9); // rc filter Smoothing coefficient
// Convert attack/decay/release time to RC time constant
// rc_set(0.2 * t);
rc_a = 1 / (rc * srate + 1);

// Low-pass

function rc_lp(s, a)
  (
  this.lp += a * (s - this.lp);
  );

//|||||||||||||||||||||||||||||DC OFFSET REMOVAL|||||||||||||||||||||||||||||
itm1=itm2=otm1=otm2=0;

@slider

gain_input = exp(slider1 * 0.11552453);
pow = slider2;

bias = slider9;

overshoot_period_0 = rand(slider11);// * srate / 1000000;
overshoot_period_1 = rand(slider11);// * srate / 1000000;

//excursion = slider10;
drive = 1 + slider10;

gain_output = exp(slider20 * 0.11552453);

stages = slider64;

rc = 1 / (2 * $pi * slider19); // rc filter Smoothing coefficient
rc_a = 1 / (rc * srate + 1);


//Debug reMap()
slider61 = reMap(slider60, 0, 2, 0, gain_input, pow);
sliderchange(slider61);
@block

@sample
current_stage = 1;

overshoot_period_0 = rand(slider11);
overshoot_period_0 = overshoot_period_0.rc_lp(overshoot_period_0, rc_a);

overshoot_period_1 = rand(slider11);
overshoot_period_1 = overshoot_period_1.rc_lp(overshoot_period_1, rc_a);

loop(stages,
//|||||||||||||||||||||||||||||INPUT GAIN||||||||||||||||||||||||||||
//spl0 *= gain_input;
//spl1 *= gain_input;
spl0 = sign(spl0) * reMap(abs(spl0), 0, 1, 0, gain_input, pow);
spl1 = sign(spl1) * reMap(abs(spl1), 0, 1, 0, gain_input, pow);



//|||||||||||||||||||||||||||||DC BIAS PRE-EMPHASIS||||||||||||||||||||||||||||
spl0 -= bias;
spl1 -= bias;

//|||||||||||||||||||||||||||||LAB||||||||||||||||||||||||||||

//spl0 = foldExClip(spl0, 1, excursion);
tanh_spl0 = tanH(drive * spl0, 1);

abs(spl0) >  abs(tanh_spl0) ? // Are we clipping ?
  (
  overshoot_period_0 ?
    (
    overshoot_ratio = 0.5 * min(1, Normalize(clipping_spl0_count, 0, overshoot_period_0));  
    ):(
    overshoot_ratio = 0.5;
    );
  clipping_spl0_count += 1;  
  spl0 = (1- overshoot_ratio ) * spl0 + overshoot_ratio * tanh_spl0;
  
  
  ):(
  clipping_spl0_count = 0;
  spl0 = tanh_spl0;
  );

tanh_spl1 = tanH(drive * spl1, 1);

abs(spl1) >  abs(tanh_spl1) ? // Are we clipping ?
  (
  overshoot_period_1 ?
    (
    overshoot_ratio = 0.5 * min(1, Normalize(clipping_spl1_count, 0, overshoot_period_1));  
    ):(
    overshoot_ratio = 0.5;
    );
  clipping_spl1_count += 1;  
  spl1 = (1- overshoot_ratio ) * spl1 + overshoot_ratio * tanh_spl1;
  
  
  ):(
  clipping_spl1_count = 0;
  spl1 = tanh_spl1;
  );

//|||||||||||||||||||||||||||||DC BIAS DE-EMPHASIS||||||||||||||||||||||||||||
spl0 += bias;
spl1 += bias;
//|||||||||||||||||||||||||||||DC OFFSET REMOVAL|||||||||||||||||||||||||||||

otm1=0.999*otm1 + spl0 - itm1; itm1=spl0; spl0=otm1;
otm2=0.999*otm2 + spl1 - itm2; itm2=spl1; spl1=otm2;

//|||||||||||||||||||||||||||||STAGE LP FILTER|||||||||||||||||||||||||||||
/*
current_stage == 1 ?  ( spl0 = spl0_s1.rc_lp(spl0, rc_a);  spl1 = spl1_s1.rc_lp(spl1, rc_a);
  ):(
current_stage == 2 ?  ( spl0 = spl0_s2.rc_lp(spl0, rc_a);  spl1 = spl1_s2.rc_lp(spl1, rc_a);
  ):(
current_stage == 3 ?  ( spl0 = spl0_s3.rc_lp(spl0, rc_a);  spl1 = spl1_s3.rc_lp(spl1, rc_a);
  ):(
current_stage == 4 ?  ( spl0 = spl0_s4.rc_lp(spl0, rc_a);  spl1 = spl1_s4.rc_lp(spl1, rc_a);
  ):(
current_stage == 5 ?  ( spl0 = spl0_s5.rc_lp(spl0, rc_a);  spl1 = spl1_s5.rc_lp(spl1, rc_a);
  ):(
                        spl0 = spl0_s6.rc_lp(spl0, rc_a);  spl1 = spl1_s6.rc_lp(spl1, rc_a);
  );););););

current_stage += 1;
*/
);

spl0 = tanH(spl0, 1);
spl1 = tanH(spl1, 1);

//|||||||||||||||||||||||||||||OUTPUT GAIN||||||||||||||||||||||||||||
spl0 *= gain_output;
spl1 *= gain_output;



